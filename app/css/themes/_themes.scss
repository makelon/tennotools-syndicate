@use "sass:math";

@mixin menu-item($theme) {
	%menu-item-#{$theme} {
		color: $linkColor;

		&:hover {
			color: $linkColorHover;
		}

		&.active {
			color: $linkColorActive;
		}
	}

	%menu-item-background-#{$theme} {
		@extend %menu-item-#{$theme};

		&:hover {
			background: $listItemBackgroundActive;
		}
	}
}

@include menu-item($theme);

#menu a {
	@extend %menu-item-#{$theme};
}

h1, h2 {
	color: $headerColor;
}

::placeholder {
	color: $placeholderColor;
}

::-webkit-input-placeholder {
	color: $placeholderColor;
}

::-moz-placeholder {
	color: $placeholderColor;
}

input:-ms-input-placeholder {
	color: $placeholderColor;
}

.icon {
	background-image: url($iconsUrl);
}

.dark-box {
	background: $darkBackground;
}

.light-box {
	background: $lightBackground;
}

.border {
	border-color: $boxBorderColor;
}

.shadow {
	box-shadow: $shadow;
}

#menu, #theme-menu {
	background: $menuBackground;
}

#theme-menu div {
	@extend %menu-item-background-#{$theme};
}

input {
	background: $inputBackground;
	color: $inputColor;
}

input {
	border-color: $inputBorderColor;
	border-style: $inputBorderStyle;
	border-width: $inputBorderWidth;

	&:hover, &:focus {
		background: $inputBackgroundActive;
		border-color: $inputBorderColorActive;
	}
}

.buttons button {
	border-color: $buttonBorderColor;
	border-style: $buttonBorderStyle;
	border-width: $buttonBorderWidth;
}

.buttons button {
	background: $buttonBackground;
	color: $buttonColor;
	&:hover, &:focus {
		background: $buttonBackgroundActive;
		color: $buttonColorActive;
	}

	&:disabled {
		background: $buttonBackgroundDisabled;
		color: $buttonColorDisabled;
	}
}

.values input, input.multiply {
	&:hover, &:focus {
		background: $inputBackgroundActive;
	}
}

.rank-label {
	color: $linkColor;

	&:hover, &.selecting {
		color: $linkColorHover;
	}
}

.rank-stars.neg {
	color: $starColorNeg;
}

.rank-stars.pos {
	color: $starColorPos;
}

.ranklist-item {
	@extend %menu-item-background-#{$theme};
}

.ranklist-item {
	border-color: $ranklistLeftColor;

	&.neg {
		border-left-color: $diffColorNeg;
	}

	&.pos {
		border-left-color: $diffColorPos;
	}
}

.progress-background {
	background: $progressColor;
}

.points-next-rank {
	color: $nextRankColor;
}

.progress.neg {
	background: $diffColorNeg;
}

.progress.pos {
	background: $diffColorPos;
}

.diff.neg {
	color: $diffColorNeg;
}

.diff.pos {
	color: $diffColorPos;
}

#planner {
	.synd {
		border-color: $plannerSepColor;
	}

	.controls {
		background: $controlBackground;
		border-color: $controlBorderColor;
		border-style: $controlBorderStyle;
		border-width: $controlBorderWidth;

		button {
			color: $controlColor;

			&:hover {
				background: $controlBackgroundActive;
				color: $controlColorActive;
			}
		}
	}

	.out .neg {
		color: $diffColorNeg;
	}

	.out .pos {
		color: $diffColorPos;
	}

	@at-root &-suggestions {
		.suggestion {
			& + .suggestion {
				border-color: $suggestionSepColor;
			}
	
			&:hover {
				background: $listItemBackgroundActive;
			}
		}
	
		.neg {
			color: $diffColorNeg;
		}
	
		.pos {
			color: $diffColorPos;
		}
	}
}

@for $i from 0 through 9 {
	.color-lerp#{$i} {
		 color: mix($colorLerpEnd, $colorLerpStart, math.div(100 * $i, 9));
	}
}
